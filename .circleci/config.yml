version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.17
    working_directory: /go/src/github.com/antham/chyle
    environment:
       BASH_ENV: /home/circleci/.bashrc
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            export GO111MODULE=on
            wget -O doc-hunt https://github.com/antham/doc-hunt/releases/download/v2.1.1/doc-hunt_linux_amd64
            sudo mv doc-hunt /usr/local/bin
            sudo chmod 777 /usr/local/bin/doc-hunt
            wget -O gommit https://github.com/antham/gommit/releases/download/v2.1.1/gommit_linux_386
            sudo mv gommit /usr/local/bin
            sudo chmod 777 /usr/local/bin/gommit
            go get -u github.com/mitchellh/gox@v1.0.1
            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/bin v1.27.0
      - run:
          name: Install vendors
          command: |
            go mod vendor
      - run:
          name: Run tests
          command: |
            make test-all
      - run:
          name: Compile
          command: |
            gox -output "build/{{.Dir}}_{{.OS}}_{{.Arch}}" --osarch "linux/amd64 darwin/amd64 windows/amd64"
      - run:
          name: Run gommit
          command: |
            if [ $CIRCLE_BRANCH != 'master' ]; then
            git fetch --all
            gommit check range $(git rev-parse origin/master) $(git rev-parse ${CIRCLE_BRANCH})
            fi
      - run:
          name: Push on codecov result
          command: |
            bash <(curl -s https://codecov.io/bash)

  publish:
    docker:
      - image: circleci/golang:1.17
    working_directory: /go/src/github.com/antham/chyle
    steps:
      - checkout
      - run:
          name: Fetch tags
          command: |
            git fetch --tags
      - run:
          name: Install dependencies
          command: |
            export GO111MODULE=on
            mkdir /home/circleci/bin
            go get -u github.com/mitchellh/gox@v1.0.1
            go get -u github.com/tcnksm/ghr@v0.13.0
            wget -O ~/bin/chyle https://github.com/antham/chyle/releases/download/v1.2.0/chyle_linux_amd64
            chmod 777 ~/bin/chyle
      - run:
          name: Install vendors
          command: |
            go mod vendor
      - run:
          name: Compile
          command: |
            gox -output "build/{{.Dir}}_{{.OS}}_{{.Arch}}" -osarch "linux/amd64 darwin/amd64 windows/amd64"
      - run:
          run: Upload assets
          command: |
            ghr -u antham $(git tag -l --sort=-v:refname|head -n 1) build/
      - run:
          name: Run chyle
          command: |
            FROM_TAG=$(git tag -l --sort=-v:refname|head -n 2|tail -n 1)
            TO_TAG=$(git tag -l --sort=-v:refname|head -n 1)
            export CHYLE_GIT_REPOSITORY_PATH="."
            export CHYLE_GIT_REFERENCE_FROM="$(git rev-parse $FROM_TAG)"
            export CHYLE_GIT_REFERENCE_TO="$(git rev-parse $TO_TAG)"
            export CHYLE_MATCHERS_TYPE="merge"
            export CHYLE_EXTRACTORS_GITHUBISSUEID_ORIGKEY="message"
            export CHYLE_EXTRACTORS_GITHUBISSUEID_DESTKEY="githubIssueId"
            export CHYLE_EXTRACTORS_GITHUBISSUEID_REG="#(\\d+)"
            export CHYLE_DECORATORS_GITHUBISSUE_CREDENTIALS_OWNER="antham"
            export CHYLE_DECORATORS_GITHUBISSUE_CREDENTIALS_OAUTHTOKEN="$GITHUB_TOKEN"
            export CHYLE_DECORATORS_GITHUBISSUE_KEYS_TITLE_DESTKEY="issueTitle"
            export CHYLE_DECORATORS_GITHUBISSUE_KEYS_TITLE_FIELD="title"
            export CHYLE_DECORATORS_GITHUBISSUE_REPOSITORY_NAME="$CIRCLE_PROJECT_REPONAME"

            export CHYLE_SENDERS_GITHUBRELEASE_CREDENTIALS_OAUTHTOKEN="$GITHUB_TOKEN"
            export CHYLE_SENDERS_GITHUBRELEASE_CREDENTIALS_OWNER="antham"
            export CHYLE_SENDERS_GITHUBRELEASE_RELEASE_TAGNAME="$TO_TAG"
            export CHYLE_SENDERS_GITHUBRELEASE_RELEASE_UPDATE="true"
            export CHYLE_SENDERS_GITHUBRELEASE_REPOSITORY_NAME="$CIRCLE_PROJECT_REPONAME"
            export CHYLE_SENDERS_GITHUBRELEASE_RELEASE_TEMPLATE='### Changes
            {{ range $key, $value := .Datas }}
            => {{ $value.issueTitle }} (#{{ $value.githubIssueId }}) {{ end }}'

            ~/bin/chyle create
workflows:
  version: 2
  build:
    jobs:
      - build
  publish:
    jobs:
      - publish:
          context: org-global
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
